{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","elem","SearchBox","placeHolder","handleChange","type","placeholder","onChange","App","state","searchField","arr","query","filter","el","toLowerCase","indexOf","fetch","then","response","json","users","setState","this","filteredMonsters","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAGaA,G,MAAO,SAACC,GACjB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACrB,mCAAML,EAAMI,QAAQE,KAApB,OACA,4BAAIN,EAAMI,QAAQG,aCJlBC,G,MAAW,SAACR,GACpB,OACG,qBAAKC,UAAU,YAAf,SACGD,EAAMS,SAASC,KAAI,SAAAC,GAAI,OACpB,cAAC,EAAD,CAAoBP,QAASO,GAAlBA,EAAKN,WCLjBO,G,MAAY,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aACpC,OACI,uBAAQb,UAAU,SACVc,KAAK,SACLC,YAAaH,EACbI,SAAUH,MCsCXI,G,wDAvCb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXV,SAAW,GACXW,YAAa,IAJH,E,wDASFC,EAAKC,GACf,OAAOD,EAAIE,QAAO,SAASC,GACvB,OAA+D,IAAxDA,EAAGlB,KAAKmB,cAAcC,QAAQJ,EAAMG,oB,0CAI5B,IAAD,OAClBE,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAU,EAAKC,SAAS,CAACvB,SAAWsB,S,+BAInC,IAAD,SACyBE,KAAKd,MAA9BV,EADA,EACAA,SAAUW,EADV,EACUA,YACXc,EAAmBzB,EAASc,QAAO,SAAAnB,GAAO,OAC7CA,EAAQE,KAAKmB,cAAcU,SAASf,EAAYK,kBAEpD,OACE,sBAAKxB,UAAU,MAAf,UACI,mDACA,cAAC,EAAD,CAAWY,YAAY,kBACbC,aAAc,SAAAsB,GAAC,OAAI,EAAKJ,SAAS,CAACZ,YAAagB,EAAEC,OAAOC,WAClE,cAAC,EAAD,CAAU7B,SAAUyB,W,GAlCVK,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.af2284ae.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props) => {\r\n    return (\r\n        <div className=\"card-container\">\r\n            <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set1&size=180x180`}/>\r\n             <h2> {props.monster.name} </h2>\r\n             <p>{props.monster.email}</p> \r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport {Card} from '../card/card.component.jsx'\r\nimport './card-list.styles.css';\r\n\r\nexport const CardList = (props) => {\r\n     return (\r\n        <div className='card-list'> \r\n          {props.monsters.map(elem => (\r\n              <Card key={elem.id} monster={elem} /> \r\n            ))\r\n          }\r\n        </div>\r\n     );\r\n}","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({placeHolder, handleChange}) => {\r\n    return(\r\n        <input  className=\"search\"\r\n                type=\"search\" \r\n                placeholder={placeHolder}\r\n                onChange={handleChange}\r\n        />\r\n    );\r\n}","import React, { Component } from 'react';\nimport {CardList} from './components/card-list/card-list.component.jsx';\nimport {SearchBox} from './components/search-box/search-box.component.jsx';\nimport './App.css';\n\nclass App extends Component {\n \n  constructor (){\n    super();\n    this.state = {\n      monsters : [],\n      searchField: ''\n    }\n  }\n\n\n  filterItems(arr, query) {\n    return arr.filter(function(el) {\n        return el.name.toLowerCase().indexOf(query.toLowerCase()) !== -1\n    })\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then(response => response.json())\n    .then(users => {this.setState({monsters : users});});\n  \n  }\n\n render (){\n   const {monsters, searchField} = this.state;\n   const filteredMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase()))\n\n  return(    \n    <div className=\"App\">\n        <h1>Monster's Rolodex</h1>\n        <SearchBox placeHolder=\"Search Monsters\" \n                  handleChange={e => this.setState({searchField: e.target.value})} />\n        <CardList monsters={filteredMonsters}>\n        </CardList>\n    </div>\n\n    )\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}